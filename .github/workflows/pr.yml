name: PR

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
  merge_group:

jobs:
  build:
    name: Build and test (Maven)

    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          fetch-depth: 0
          show-progress: false

      - name: Set up Java
        uses: actions/setup-java@6a0805fcefea3d4657a47ac4c165951e33482018 # v4.2.2
        with:
          distribution: 'zulu'
          java-version-file: '.java-version'

      - name: Cache local Maven repository
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: |
            ~/.m2/repository
            ~/.m2/wrapper
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml', '.mvn/wrapper/maven-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build and test, with coverage
        run: ./mvnw -B -ntp -P coverage install

      - name: Upload build output
        uses: actions/upload-artifact@834a144ee995460fba8ed112a2fc961b36a5ec5a # v4.3.6
        if: always()
        with:
          name: maven-build-output
          path: |
            **/target/it/*/src/
            **/target/it/*/build.log
            **/target/it/*/pom.xml
            **/target/site/jacoco-aggregate/
            **/target/surefire-reports/
            **/target/test-classes/projects/*/project/*/src/
            **/target/test-classes/projects/*/project/*/build.log
            **/target/test-classes/projects/*/project/*/pom.xml
            **/target/checkstyle-result.xml
            **/target/spotbugs.html
            **/target/spotbugs.xml
            **/target/spotbugsXml.xml
            **/.flattened-pom.xml
          retention-days: 15

      - name: Cache SonarCloud packages
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Analyze
        run: ./mvnw -B -ntp sonar:sonar -Dsonar.host.url="$SONAR_HOST_URL" -Dsonar.organization="$SONAR_ORGANIZATION" -Dsonar.projectKey="$SONAR_PROJECTKEY"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
          SONAR_ORGANIZATION: ${{ vars.SONAR_ORGANIZATION }}
          SONAR_PROJECTKEY: ${{ vars.SONAR_PROJECTKEY }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Stage site
        run: ./mvnw -B -ntp -P coverage,release site site:stage

      - name: Upload site
        uses: actions/upload-artifact@834a144ee995460fba8ed112a2fc961b36a5ec5a # v4.3.6
        if: always()
        with:
          name: maven-site
          path: target/staging/
          retention-days: 15

  build-gradle:
    name: Build and test (Gradle)

    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          fetch-depth: 0
          show-progress: false

      - name: Set up Java
        uses: actions/setup-java@6a0805fcefea3d4657a47ac4c165951e33482018 # v4.2.2
        with:
          distribution: 'zulu'
          java-version-file: '.java-version'

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

      - name: Build and test, with coverage
        run: ./gradlew build

      - name: Cache SonarCloud packages
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Analyze
        run: ./gradlew sonar --info -Dsonar.host.url="$SONAR_HOST_URL" -Dsonar.organization="$SONAR_ORGANIZATION" -Dsonar.projectKey="$SONAR_PROJECTKEY"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
          SONAR_ORGANIZATION: ${{ vars.SONAR_ORGANIZATION }}
          SONAR_PROJECTKEY: ${{ vars.SONAR_PROJECTKEY }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
