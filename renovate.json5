{
  $schema: 'https://docs.renovatebot.com/renovate-schema.json',
  extends: [
    'config:best-practices',
    ':automergeAll',
    ':automergePr',
    ':automergeRequireAllStatusChecks',
    ':semanticCommitsDisabled',
    ':separateMultipleMajorReleases',
    ':separateMultipleMinorReleases',
    ':separatePatchReleases',
  ],
  customDatasources: {
    sdkmanJavaVersion: {
      defaultRegistryUrlTemplate: 'https://api.sdkman.io/2/candidates/java/linuxx64/versions/all',
      format: 'plain',
      transformTemplates: [
        '{ "releases": $map($filter($split(releases.version, ","), function($v) { $match($v, /(?<!\\.(?:crac|fx))-zulu/) }), function($v) { { "version": $replace($v, /-zulu/, "") } }) }',
      ],
    },
    sdkmanGradleVersion: {
      defaultRegistryUrlTemplate: 'https://api.sdkman.io/2/candidates/gradle/linuxx64/versions/all',
      format: 'plain',
      transformTemplates: [
        '{ "releases": $map($split(releases.version, ","), function($v) { { "version": $v } }) }',
      ],
    },
    sdkmanMavenVersion: {
      defaultRegistryUrlTemplate: 'https://api.sdkman.io/2/candidates/maven/linuxx64/versions/all',
      format: 'plain',
      transformTemplates: [
        '{ "releases": $map($split(releases.version, ","), function($v) { { "version": $v } }) }',
      ],
    },
    sdkmanMvndVersion: {
      defaultRegistryUrlTemplate: 'https://api.sdkman.io/2/candidates/mvnd/linuxx64/versions/list?installed=',
      format: 'plain',
      transformTemplates: [
        '{ "releases": $map($reduce($map(releases[version ~> /^\\d/].version, function($v) { $split($v, /\\s+/) }), $append), function($v) { { "version": $v } }) }',
      ],
    },
  },
  customManagers: [
    {
      customType: 'regex',
      managerFilePatterns: ['/^\\.sdkmanrc$/'],
      matchStrings: ['java=(?<currentValue>.+)-zulu\\n'],
      depNameTemplate: 'java',
      datasourceTemplate: 'custom.sdkmanJavaVersion',
    },
    {
      customType: 'regex',
      managerFilePatterns: ['/^\\.sdkmanrc$/'],
      matchStrings: ['gradle=(?<currentValue>.+)\\n'],
      depNameTemplate: 'gradle',
      datasourceTemplate: 'custom.sdkmanGradleVersion',
      versioningTemplate: 'gradle',
    },
    {
      customType: 'regex',
      managerFilePatterns: ['/^\\.sdkmanrc$/'],
      matchStrings: ['maven=(?<currentValue>.+)\\n'],
      depNameTemplate: 'maven',
      datasourceTemplate: 'custom.sdkmanMavenVersion',
      versioningTemplate: 'maven',
    },
    {
      customType: 'regex',
      managerFilePatterns: ['/^\\.sdkmanrc$/'],
      matchStrings: ['mvnd=(?<currentValue>.+)\\n'],
      depNameTemplate: 'mvnd',
      datasourceTemplate: 'custom.sdkmanMvndVersion',
      versioningTemplate: 'maven',
    },
    {
      customType: 'regex',
      managerFilePatterns: ['/^gradle/libs\\.versions\\.toml$/'],
      matchStrings: ['(?<depName>node) = "(?<currentValue>.+)"\\n'],
      datasourceTemplate: 'node-version',
    },
    {
      customType: 'regex',
      managerFilePatterns: ['/^gradle/libs\\.versions\\.toml$/'],
      matchStrings: [
        '(?<depName>prettier(?:|-plugin-(?:properties|toml))?) = "(?<currentValue>.+)"\\n',
      ],
      datasourceTemplate: 'npm',
    },
    {
      customType: 'regex',
      managerFilePatterns: ['/^pom\\.xml$/'],
      matchStrings: ['<(?<depName>node)\\.version>(?<currentValue>.+)<\\/'],
      datasourceTemplate: 'node-version',
    },
    {
      customType: 'regex',
      managerFilePatterns: ['/^pom\\.xml$/'],
      matchStrings: [
        '<(?<depName>prettier(?:|-plugin-properties)?)\\.version>(?<currentValue>.+)<\\/',
      ],
      datasourceTemplate: 'npm',
    },
  ],
  logLevelRemap: [
    {
      matchMessage: '/^Custom manager fetcher/',
      newLogLevel: 'debug',
    },
    {
      matchMessage: '/^Response that has failed validation/',
      newLogLevel: 'debug',
    },
  ],
  packageRules: [
    {
      matchPackageNames: ['gradle'],
      ignoreUnstable: false,
    },
    {
      matchPackageNames: ['java'],
      matchUpdateTypes: ['major', 'minor'],
      enabled: false,
    },
    {
      matchPackageNames: ['maven'],
      matchUpdateTypes: ['major'],
      enabled: false,
    },
    {
      matchPackageNames: ['mvnd'],
      matchUpdateTypes: ['major'],
      enabled: false,
    },
    {
      matchDatasources: ['custom.sdkmanMvndVersion'],
      sourceUrl: 'https://github.com/apache/maven-mvnd',
    },
    {
      matchPackageNames: ['org.assertj:assertj-bom'],
      groupName: 'assertj',
    },
    {
      matchPackageNames: ['org.awaitility:awaitility'],
      groupName: 'awaitility',
    },
    {
      matchPackageNames: ['biz.aQute.bnd:biz.aQute.bnd.annotation'],
      groupName: 'bnd-annotation',
    },
    {
      matchPackageNames: ['net.bytebuddy:**'],
      groupName: 'byte-buddy',
    },
    {
      matchPackageNames: ['com.puppycrawl.tools:checkstyle'],
      groupName: 'checkstyle',
    },
    {
      matchPackageNames: ['io.github.solven-eu.cleanthat:**'],
      groupName: 'cleanthat',
    },
    {
      matchPackageNames: ['org.apache.commons:commons-collections4'],
      groupName: 'commons-collections4',
    },
    {
      matchPackageNames: ['commons-codec:commons-codec'],
      groupName: 'commons-codec',
    },
    {
      matchPackageNames: ['org.apache.commons:commons-compress'],
      groupName: 'commons-compress',
    },
    {
      matchPackageNames: ['commons-io:commons-io'],
      groupName: 'commons-io',
    },
    {
      matchPackageNames: ['org.apache.commons:commons-lang3'],
      groupName: 'commons-lang3',
    },
    {
      matchPackageNames: ['org.apache.commons:commons-text'],
      groupName: 'commons-text',
    },
    {
      matchPackageNames: ['com.github.docker-java:**'],
      groupName: 'docker-java',
    },
    {
      matchPackageNames: ['com.google.errorprone:**'],
      groupName: 'error-prone',
    },
    {
      matchPackageNames: ['com.h3xstream.findsecbugs:findsecbugs-plugin'],
      groupName: 'findsecbugs-plugin',
    },
    {
      matchPackageNames: [
        'de.thetaphi.forbiddenapis:de.thetaphi.forbiddenapis.gradle.plugin',
        'de.thetaphi:forbiddenapis',
      ],
      groupName: 'forbiddenapis',
    },
    {
      matchPackageNames: ['com.google.googlejavaformat:google-java-format'],
      groupName: 'google-java-format',
    },
    {
      matchPackageNames: ['com.google.guava:guava'],
      groupName: 'guava',
      versioning: 'docker',
    },
    {
      matchPackageNames: ['com.h2database:**'],
      groupName: 'h2',
    },
    {
      matchPackageNames: ['com.zaxxer:HikariCP'],
      groupName: 'hikaricp',
    },
    {
      matchPackageNames: ['org.hsqldb:**'],
      groupName: 'hsqldb',
    },
    {
      matchPackageNames: ['com.fasterxml.jackson:jackson-bom'],
      groupName: 'jackson',
    },
    {
      matchPackageNames: ['org.jacoco:**'],
      groupName: 'jacoco',
    },
    {
      matchPackageNames: ['jakarta.activation:**'],
      groupName: 'jakarta-activation',
    },
    {
      matchPackageNames: ['org.jetbrains:annotations'],
      groupName: 'jetbrains-annotations',
    },
    {
      matchPackageNames: ['org.jooq:**'],
      groupName: 'jooq',
    },
    {
      matchPackageNames: ['org.jspecify:**'],
      groupName: 'jspecify',
    },
    {
      matchPackageNames: ['org.junit:**'],
      groupName: 'junit',
    },
    {
      matchPackageNames: ['org.junit-pioneer:junit-pioneer'],
      groupName: 'junit-pioneer',
    },
    {
      matchPackageNames: ['org.liquibase:**'],
      groupName: 'liquibase',
    },
    {
      matchPackageNames: ['ch.qos.logback:**'],
      groupName: 'logback',
    },
    {
      matchPackageNames: ['org.projectlombok:lombok'],
      groupName: 'lombok',
    },
    {
      matchPackageNames: [
        'org.apache.maven.plugins:maven-wrapper-plugin',
        'org.apache.maven.wrapper:maven-wrapper',
      ],
      groupName: 'maven-wrapper',
    },
    {
      matchPackageNames: ['io.micrometer:**'],
      groupName: 'micrometer',
    },
    {
      matchPackageNames: ['com.microsoft.sqlserver:mssql-jdbc'],
      groupName: 'mssql-jdbc',
    },
    {
      matchPackageNames: ['com.uber.nullaway:**'],
      groupName: 'nullaway',
    },
    {
      matchPackageNames: ['com.opencsv:opencsv'],
      groupName: 'opencsv',
    },
    {
      matchPackageNames: ['org.postgresql:postgresql'],
      groupName: 'postgresql',
    },
    {
      matchPackageNames: ['org.yaml:snakeyaml'],
      groupName: 'snakeyaml',
    },
    {
      matchPackageNames: [
        'com.github.spotbugs:spotbugs',
        'com.github.spotbugs:spotbugs-annotations',
      ],
      groupName: 'spotbugs',
    },
    {
      matchFileNames: [
        '**/src/it/spring-boot-3.2/pom.xml',
        '**/src/it/spring-boot-3.3/pom.xml',
        '**/src/it/spring-boot-3.4/pom.xml',
      ],
      matchPackageNames: ['org.springframework.boot:**'],
      matchUpdateTypes: ['major', 'minor'],
      enabled: false,
    },
    {
      matchPackageNames: [
        'com.diffplug.spotless:com.diffplug.spotless.gradle.plugin',
      ],
      sourceUrl: 'https://github.com/diffplug/spotless',
    },
    {
      matchPackageNames: [
        'com.github.node-gradle.node:com.github.node-gradle.node.gradle.plugin',
      ],
      sourceUrl: 'https://github.com/node-gradle/gradle-node-plugin',
    },
    {
      matchPackageNames: [
        'com.github.spotbugs:com.github.spotbugs.gradle.plugin',
      ],
      sourceUrl: 'https://github.com/spotbugs/spotbugs-gradle-plugin',
    },
    {
      matchPackageNames: [
        'de.thetaphi.forbiddenapis:de.thetaphi.forbiddenapis.gradle.plugin',
      ],
      sourceUrl: 'https://github.com/policeman-tools/forbidden-apis',
    },
    {
      matchPackageNames: [
        'io.github.gradle-nexus.publish-plugin:io.github.gradle-nexus.publish-plugin.gradle.plugin',
      ],
      sourceUrl: 'https://github.com/gradle-nexus/publish-plugin',
    },
    {
      matchPackageNames: [
        'net.ltgt.errorprone:net.ltgt.errorprone.gradle.plugin',
      ],
      sourceUrl: 'https://github.com/tbroyer/gradle-errorprone-plugin',
    },
    {
      matchPackageNames: ['net.ltgt.nullaway:net.ltgt.nullaway.gradle.plugin'],
      sourceUrl: 'https://github.com/tbroyer/gradle-nullaway-plugin',
    },
    {
      matchPackageNames: ['nu.studer.jooq:nu.studer.jooq.gradle.plugin'],
      sourceUrl: 'https://github.com/etiennestuder/gradle-jooq-plugin',
    },
    {
      matchPackageNames: [
        'org.openrewrite.rewrite:org.openrewrite.rewrite.gradle.plugin',
      ],
      sourceUrl: 'https://github.com/openrewrite/rewrite-gradle-plugin',
    },
    {
      matchPackageNames: ['org.sonarqube:org.sonarqube.gradle.plugin'],
      sourceUrl: 'https://github.com/SonarSource/sonar-scanner-gradle',
    },
  ],
}
