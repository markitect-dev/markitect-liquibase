name: CI

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

on:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/**'
      - '.editorconfig'
      - '.gitattributes'
      - '.gitignore'
      - '.sdkmanrc'
      - 'renovate.json'
      - '*.md'
      - '*.txt'
  schedule:
    - cron: '0 11,23 * * *'
  workflow_dispatch:

jobs:
  build:
    name: Build and test

    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Check out repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0
          show-progress: false

      - name: Set up Java
        uses: actions/setup-java@0ab4596768b603586c0de567f2430c30f5b0d2b0 # v3.13.0
        with:
          distribution: 'zulu'
          java-version-file: '.java-version'
          cache: 'maven'

      - name: Build and test, with coverage
        run: |
          ./mvnw -B -ntp -P coverage,release install \
              -Dgpg.skip=true

      - name: Update dependency graph
        uses: advanced-security/maven-dependency-submission-action@fcd7eab6b6d22946badc98d1e62665cdee93e0ae # v3.0.3

      - name: Cache SonarCloud packages
        uses: actions/cache@13aacd865c20de90d75de3b17ebe84f7a17d57d2 # v4.0.0
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Analyze
        run: |
          ./mvnw -B -ntp org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
              -Dsonar.host.url="$SONAR_HOST_URL" \
              -Dsonar.organization="$SONAR_ORGANIZATION" \
              -Dsonar.projectKey="$SONAR_PROJECTKEY"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
          SONAR_ORGANIZATION: ${{ vars.SONAR_ORGANIZATION }}
          SONAR_PROJECTKEY: ${{ vars.SONAR_PROJECTKEY }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  publish-artifacts:
    name: Publish artifacts

    runs-on: ubuntu-latest

    needs:
      - build

    steps:
      - name: Check out repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0
          show-progress: false

      - name: Set up Java
        uses: actions/setup-java@0ab4596768b603586c0de567f2430c30f5b0d2b0 # v3.13.0
        with:
          distribution: 'zulu'
          java-version-file: '.java-version'
          cache: 'maven'
          server-id: ossrh
          server-username: OSSRH_USERNAME
          server-password: OSSRH_TOKEN
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

      - name: Publish artifacts
        run: |
          ./mvnw -B -ntp -P release deploy \
              -Dspotless.check.skip=true \
              -Dcheckstyle.skip=true \
              -Dmaven.test.skip=true \
              -Darchetype.test.skip=true \
              -Dgpg.keyname="$MAVEN_GPG_KEYNAME"
        env:
          MAVEN_GPG_KEYNAME: ${{ vars.MAVEN_GPG_KEYNAME }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_TOKEN: ${{ secrets.OSSRH_TOKEN }}

  publish-site:
    name: Publish site

    runs-on: ubuntu-latest

    permissions:
      contents: write

    needs:
      - build
      - publish-artifacts

    steps:
      - name: Check out repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0
          show-progress: false

      - name: Set up Java
        uses: actions/setup-java@0ab4596768b603586c0de567f2430c30f5b0d2b0 # v3.13.0
        with:
          distribution: 'zulu'
          java-version-file: '.java-version'
          cache: 'maven'

      - name: Configure Git
        run: |
          git config --global user.name "$GIT_USER_NAME"
          git config --global user.email "$GIT_USER_EMAIL"
        env:
          GIT_USER_NAME: ${{ vars.GIT_USER_NAME }}
          GIT_USER_EMAIL: ${{ vars.GIT_USER_EMAIL }}

      - name: Build and test, with coverage
        run: |
          ./mvnw -B -ntp -P coverage install \
              -Dspotless.check.skip=true \
              -Dcheckstyle.skip=true \
              -Darchetype.test.skip=true

      - name: Stage site
        run: ./mvnw -B -ntp -P coverage,release site site:stage

      - name: Publish site
        run: |
          ./mvnw -B -ntp scm-publish:publish-scm \
              -Dusername="$GITHUB_ACTOR" \
              -Dpassword="$GITHUB_TOKEN"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
