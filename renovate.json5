{
  $schema: 'https://docs.renovatebot.com/renovate-schema.json',
  extends: [
    'config:best-practices',
    ':automergeAll',
    ':automergePr',
    ':automergeRequireAllStatusChecks',
    ':semanticCommitsDisabled',
    ':separateMultipleMajorReleases',
    ':separateMultipleMinorReleases',
    ':separatePatchReleases',
  ],
  customDatasources: {
    sdkmanJavaVersion: {
      defaultRegistryUrlTemplate: 'https://api.sdkman.io/2/candidates/java/linuxx64/versions/all',
      format: 'plain',
      transformTemplates: [
        '{ "releases": $map($filter($split(releases.version, ","), function($v) { $match($v, /(?<!\\.(?:crac|fx))-zulu/) }), function($v) { { "version": $replace($v, /-zulu/, "") } }) }',
      ],
    },
    sdkmanGradleVersion: {
      defaultRegistryUrlTemplate: 'https://api.sdkman.io/2/candidates/gradle/linuxx64/versions/all',
      format: 'plain',
      transformTemplates: [
        '{ "releases": $map($split(releases.version, ","), function($v) { { "version": $v } }) }',
      ],
    },
    sdkmanMavenVersion: {
      defaultRegistryUrlTemplate: 'https://api.sdkman.io/2/candidates/maven/linuxx64/versions/all',
      format: 'plain',
      transformTemplates: [
        '{ "releases": $map($split(releases.version, ","), function($v) { { "version": $v } }) }',
      ],
    },
    sdkmanMvndVersion: {
      defaultRegistryUrlTemplate: 'https://api.sdkman.io/2/candidates/mvnd/linuxx64/versions/list?installed=',
      format: 'plain',
      transformTemplates: [
        '{ "releases": $map($reduce($map(releases[version ~> /^\\d/].version, function($v) { $split($v, /\\s+/) }), $append), function($v) { { "version": $v } }) }',
      ],
    },
  },
  customManagers: [
    {
      customType: 'regex',
      fileMatch: ['^\\.sdkmanrc$'],
      matchStrings: ['java=(?<currentValue>.+)-zulu\\n'],
      depNameTemplate: 'java',
      datasourceTemplate: 'custom.sdkmanJavaVersion',
    },
    {
      customType: 'regex',
      fileMatch: ['^\\.sdkmanrc$'],
      matchStrings: ['gradle=(?<currentValue>.+)\\n'],
      depNameTemplate: 'gradle',
      datasourceTemplate: 'custom.sdkmanGradleVersion',
      versioningTemplate: 'gradle',
    },
    {
      customType: 'regex',
      fileMatch: ['^\\.sdkmanrc$'],
      matchStrings: ['maven=(?<currentValue>.+)\\n'],
      depNameTemplate: 'maven',
      datasourceTemplate: 'custom.sdkmanMavenVersion',
      versioningTemplate: 'maven',
    },
    {
      customType: 'regex',
      fileMatch: ['^\\.sdkmanrc$'],
      matchStrings: ['mvnd=(?<currentValue>.+)\\n'],
      depNameTemplate: 'mvnd',
      datasourceTemplate: 'custom.sdkmanMvndVersion',
      versioningTemplate: 'maven',
    },
    {
      customType: 'regex',
      fileMatch: ['^gradle/libs\\.versions\\.toml$'],
      matchStrings: [
        '(?<depName>prettier(?:|-plugin-(?:properties|toml))?) = "(?<currentValue>.+)"\\n',
      ],
      datasourceTemplate: 'npm',
    },
    {
      customType: 'regex',
      fileMatch: ['^pom\\.xml$'],
      matchStrings: [
        '<(?<depName>prettier(?:|-plugin-properties)?)\\.version>(?<currentValue>.+)<\\/',
      ],
      datasourceTemplate: 'npm',
    },
  ],
  logLevelRemap: [
    {
      matchMessage: '/^Custom manager fetcher/',
      newLogLevel: 'debug',
    },
    {
      matchMessage: '/^Response that has failed validation/',
      newLogLevel: 'debug',
    },
  ],
  packageRules: [
    {
      matchPackageNames: ['java'],
      matchUpdateTypes: ['major', 'minor'],
      enabled: false,
    },
    {
      matchPackageNames: ['maven'],
      matchUpdateTypes: ['major'],
      enabled: false,
    },
    {
      matchPackageNames: ['mvnd'],
      matchUpdateTypes: ['major'],
      enabled: false,
    },
    {
      matchDatasources: ['custom.sdkmanMvndVersion'],
      sourceUrl: 'https://github.com/apache/maven-mvnd',
    },
    {
      matchPackageNames: ['net.bytebuddy:**'],
      groupName: 'byte-buddy',
    },
    {
      matchPackageNames: ['com.google.errorprone:**'],
      groupName: 'error-prone',
    },
    {
      matchPackageNames: ['com.h2database:**'],
      groupName: 'h2',
    },
    {
      matchPackageNames: ['org.jooq:**'],
      groupName: 'jooq',
    },
    {
      matchPackageNames: ['ch.qos.logback:**'],
      groupName: 'logback',
    },
    {
      matchPackageNames: ['io.micrometer:**'],
      groupName: 'micrometer',
    },
    {
      matchPackageNames: ['com.uber.nullaway:**'],
      groupName: 'nullaway',
    },
    {
      matchFileNames: ['**/src/it/spring-boot-3.2/pom.xml'],
      matchPackageNames: ['org.springframework.boot:**'],
      matchUpdateTypes: ['major', 'minor'],
      enabled: false,
    },
  ],
}
